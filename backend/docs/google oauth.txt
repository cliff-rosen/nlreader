Google Authentication and Authorization


GOOGLE AUTHENTICATION

1. React embeds Google Signin Button
2. User clicks button which launched Google authentication flow
3. Once user completes flow, Google passes ID token to JavaScript callback function which sends token to flask login endpoint
4. flask login decodes token and checks if token.sub is in user table. if not, flask creates user record. a user jwt with email, name and sub is then created and returned to the browser
5. back in javascript callback function, the jwt returned from flask is written to local storage and to a session component

On subsequent API calls, the jwt is sent as a bearer token


GOOGLE AUTHORIZATION

Basic Flow:

1. React embeds authorization URL in a link
2. User clicks authorization URL which records current react route in local storage and launches Google authorization flow
3. Once user completes flow, browser is redirected to auth callback react route with auth code
4. Auth callback sends auth code to Flask, which:
- exchanges auth code for google access token and refresh token
- stores the access token and refresh in the user table
5. Auth callback then updates local storage to indicate that google authorization has been obtained

API Calls from Browser

1. Browser retrieves authentication JWT from local storage
2. JWT is sent as Bearer to Flask in api call
3. Flask retrieves google access token from user table record that matches user sub from jwt
4. Access token is refreshed if necessary
5. flask makes google api call using access token

